{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Ruby",
    "scopeName": "source.ruby",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#constant"
        },
        {
            "include": "#entity"
        },
        {
            "include": "#invalid"
        },
        {
            "include": "#keyword"
        },
        {
            "include": "#meta"
        },
        {
            "include": "#operator"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#storage"
        },
        {
            "include": "#string"
        },
        {
            "include": "#support"
        },
        {
            "include": "#type"
        },
        {
            "include": "#variable"
        }
    ],
    "repository": {
        "escaped_char": {
            "patterns": [
                {
                    "match": "\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)",
                    "name": "constant.character.escape.ruby"
                }
            ]
        },
        "interpolated_ruby": {
            "patterns": [
                {
                    "begin": "#\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.begin.ruby"
                        }
                    },
                    "contentName": "source.ruby",
                    "end": "(\\})",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.end.ruby"
                        },
                        "1": {
                            "name": "source.ruby"
                        }
                    },
                    "name": "meta.embedded.line.ruby",
                    "patterns": [
                        {
                            "include": "#nest_curly_and_self"
                        },
                        {
                            "include": "$self"
                        }
                    ],
                    "repository": {
                        "nest_curly_and_self": {
                            "patterns": [
                                {
                                    "begin": "\\{",
                                    "captures": {
                                        "0": {
                                            "name": "punctuation.section.scope.ruby"
                                        }
                                    },
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#nest_curly_and_self"
                                        }
                                    ]
                                },
                                {
                                    "include": "$self"
                                }
                            ]
                        }
                    }
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(#@)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.instance.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(#@@)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.class.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(#\\$)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.global.ruby"
                }
            ]
        },
        "regex_sub": {
            "patterns": [
                {
                    "include": "#interpolated_ruby"
                },
                {
                    "include": "#escaped_char"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.quantifier.begin.ruby"
                        },
                        "3": {
                            "name": "punctuation.definition.quantifier.end.ruby"
                        }
                    },
                    "match": "(\\{)\\d+(,\\d+)?(\\})",
                    "name": "keyword.operator.quantifier.ruby"
                },
                {
                    "name": "constant.other.character-class.set.ruby",
                    "begin": "\\[\\^?",
                    "end": "\\]",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.character-class.begin.ruby"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.character-class.end.ruby"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "name": "comment.line.number-sign.ruby",
                    "begin": "\\(\\?#",
                    "end": "\\)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.ruby"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.end.ruby"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "name": "meta.group.regexp.ruby",
                    "begin": "\\(",
                    "end": "\\)",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.group.ruby"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#regex_sub"
                        }
                    ]
                },
                {
                    "name": "comment.line.number-sign.ruby",
                    "comment": "We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.",
                    "begin": "(?<=^|\\s)(#)\\s(?=[[a-zA-Z0-9,. \\t?!-][^\\x{00}-\\x{7F}]]*$)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.ruby"
                        }
                    },
                    "end": "$\\n?"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "begin": "#",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.ruby"
                        }
                    },
                    "end": "\\n",
                    "name": "comment.line.number-sign.ruby"
                }
            ]
        },
        "constant": {
            "patterns": [
                {
                    "match": "\\b\\d(?>_?\\d)*(?=\\.\\d|[eE])(\\.\\d(?>_?\\d)*)?([eE][-+]?\\d(?>_?\\d)*)?r?i?\\b",
                    "name": "constant.numeric.float.ruby"
                },
                {
                    "match": "\\b(0|(0[dD]\\d|[1-9])(?>_?\\d)*)r?i?\\b",
                    "name": "constant.numeric.integer.ruby"
                },
                {
                    "match": "\\b0[xX]\\h(?>_?\\h)*r?i?\\b",
                    "name": "constant.numeric.hex.ruby"
                },
                {
                    "match": "\\b0[bB][01](?>_?[01])*r?i?\\b",
                    "name": "constant.numeric.binary.ruby"
                },
                {
                    "match": "\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\b",
                    "name": "constant.numeric.octal.ruby"
                },
                {
                    "comment": "\n\t\t\tmatches questionmark-letters. texamples (1st alternation = hex): ?\\x1     ?\\x61n examples (2nd alternation = octal):\\0      ?\\07     ?\\017          examples (3rd alternation = escaped):        ?\\n      ?\\b          examples (4th alternation = meta-ctrl):        ?\\C-a    ?\\M-a    ?\\C-\\M-\\C-\\M-a          examples (4th alternation = normal):        ?a       ?A       ?0         ?*       ?\"       ?(         ?.       ?#                       the negative lookbehind prevents against matching       tp(42.tainted?)",
                    "match": "(?<!\\w)\\?(\\\\(x\\h{1,2}(?!\\h)\\b|0[0-7]{0,2}(?![0-7])\\b|[^x0MC])|(\\\\[MC]-)+\\w|[^\\s\\\\])",
                    "name": "constant.numeric.ruby"
                }
            ]
        },
        "entity": {
            "patterns": []
        },
        "invalid": {
            "patterns": [
                {
                    "comment": "else if is a common mistake carried over from other languages. it works if you put in a second end, but it’s never what you want.",
                    "match": "(?<!\\.)\\belse(\\s)+if\\b",
                    "name": "invalid.deprecated.ruby"
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "match": "=>",
                    "name": "punctuation.separator.key-value"
                },
                {
                    "match": "->",
                    "name": "support.function.kernel.lambda.ruby"
                },
                {
                    "match": "<<=|%=|&{1,2}=|\\*=|\\*\\*=|\\+=|-=|\\^=|\\|{1,2}=|<<",
                    "name": "keyword.operator.assignment.augmented.ruby"
                },
                {
                    "match": "<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\t])\\?",
                    "name": "keyword.operator.comparison.ruby"
                },
                {
                    "match": "(?<!\\.)\\b(and|not|or)\\b(?![?!])",
                    "name": "keyword.operator.logical.ruby"
                },
                {
                    "comment": "Make sure this goes after assignment and comparison",
                    "match": "(?<=^|[ \\t])!|&&|\\|\\||\\^",
                    "name": "keyword.operator.logical.ruby"
                },
                {
                    "match": "(%|&|\\*\\*|\\*|\\+|-|/)",
                    "name": "keyword.operator.arithmetic.ruby"
                },
                {
                    "match": "=",
                    "name": "keyword.operator.assignment.ruby"
                },
                {
                    "match": "\\||~|>>",
                    "name": "keyword.operator.other.ruby"
                }
            ]
        },
        "meta": {
            "patterns": []
        },
        "operator": {
            "patterns": []
        },
        "punctuation": {
            "patterns": [
                {
                    "match": ";",
                    "name": "punctuation.separator.statement.ruby"
                },
                {
                    "match": ",",
                    "name": "punctuation.separator.object.ruby"
                },
                {
                    "comment": "Scope Resolution Operator",
                    "match": "::",
                    "name": "punctuation.separator.scope.ruby"
                }
            ]
        },
        "storage": {
            "patterns": []
        },
        "string": {
            "patterns": [
                {
                    "name": "string.quoted.double.ruby",
                    "begin": "\"",
                    "end": "\"|$",
                    "patterns": [
                        {
                            "match": "\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)",
                            "name": "constant.character.escape.ruby"
                        },
                        {
                            "include": "#interpolated_ruby"
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.ruby",
                    "begin": "'",
                    "end": "'|$",
                    "patterns": [
                        {
                            "match": "\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)",
                            "name": "constant.character.escape.ruby"
                        },
                        {
                            "include": "#interpolated_ruby"
                        }
                    ]
                },
                {
                    "name": "string.regexp.slash.ruby",
                    "begin": "\\s/",
                    "end": "/",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#regex_sub"
                        }
                    ]
                },
                {
                    "name": "string.regexp.slash.ruby",
                    "begin": "\\s%r\\[",
                    "end": "]",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#regex_sub"
                        }
                    ]
                }
            ]
        },
        "support": {
            "patterns": [
                {
                    "match": "\\b(abort|at_exit|autoload[?]?|binding|callcc|caller|caller_locations|chomp|chop|eval|exec|exit|exit!|fork|format|gets|global_variables|gsub|lambda|load|local_variables|open|p|print|printf|proc|putc|puts|rand|readline|readlines|select|set_trace_func|sleep|spawn|sprintf|srand|sub|syscall|system|test|trace_var|trap|untrace_var|warn)(\\b|(?<=[?!]))(?![?!])",
                    "name": "support.function.kernel.ruby"
                }
            ]
        },
        "type": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "keyword.control.class.ruby"
                        },
                        "2": {
                            "name": "entity.name.type.class.ruby"
                        },
                        "3": {
                            "name": "keyword.operator.other.ruby"
                        },
                        "4": {
                            "name": "entity.other.inherited-class.ruby"
                        },
                        "5": {
                            "name": "keyword.operator.other.ruby"
                        },
                        "6": {
                            "name": "variable.other.object.ruby"
                        }
                    },
                    "match": "^\\s*(class)\\s+(?:([.a-zA-Z0-9_:]+)(?:\\s*(<)\\s*([.a-zA-Z0-9_:]+))?|(<<)\\s*([.a-zA-Z0-9_:]+))",
                    "name": "meta.class.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "keyword.control.module.ruby"
                        },
                        "2": {
                            "name": "entity.name.type.module.ruby"
                        },
                        "3": {
                            "name": "entity.other.inherited-class.module.first.ruby"
                        },
                        "4": {
                            "name": "punctuation.separator.inheritance.ruby"
                        },
                        "5": {
                            "name": "entity.other.inherited-class.module.second.ruby"
                        },
                        "6": {
                            "name": "punctuation.separator.inheritance.ruby"
                        },
                        "7": {
                            "name": "entity.other.inherited-class.module.third.ruby"
                        },
                        "8": {
                            "name": "punctuation.separator.inheritance.ruby"
                        }
                    },
                    "match": "^\\s*(module)\\s+(([A-Z]\\w*(::))?([A-Z]\\w*(::))?([A-Z]\\w*(::))*[A-Z]\\w*)",
                    "name": "meta.module.ruby"
                }
            ]
        },
        "variable": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(@)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.instance.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(@@)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.class.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(\\$)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.global.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(\\$)(!|@|&|`|'|\\+|\\d+|~|=|/|\\\\|,|;|\\.|<|>|_|\\*|\\$|\\?|:|\"|-[0adFiIlpvw])",
                    "name": "variable.other.readwrite.global.pre-defined.ruby"
                }
            ]
        }
    }
}