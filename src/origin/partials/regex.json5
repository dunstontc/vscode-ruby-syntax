{
  "repository": {
    "regex_sub": {
			"patterns": [
				{"include": "#interpolated_ruby"},
				{"include": "#escaped_char"},
				{
					"captures": {
						"1": {"name": "punctuation.definition.quantifier.begin.ruby"},
						"3": {"name": "punctuation.definition.quantifier.end.ruby"}
					},
					"match": "(\\{)\\d+(,\\d+)?(\\})",
					"name": "keyword.operator.quantifier.ruby",
				},
				{
          "name": "constant.other.character-class.set.ruby",
					"begin": "\\[\\^?",
            "end": "\\]",
            "beginCaptures": {"0": {"name": "punctuation.definition.character-class.begin.ruby"}},
					"endCaptures": {"0": {"name": "punctuation.definition.character-class.end.ruby"}},
					"patterns": [{"include": "#escaped_char"}]
				},
				{
					"name": "comment.line.number-sign.ruby",
					"begin": "\\(\\?#",
					"end": "\\)",
					"beginCaptures": {"0": {"name": "punctuation.definition.comment.begin.ruby"}},
					"endCaptures": {"0": {"name": "punctuation.definition.comment.end.ruby"}},
					"patterns": [{"include": "#escaped_char"}
					]
				},
				{
					"name": "meta.group.regexp.ruby",
					"begin": "\\(",
					"end": "\\)",
					"captures": {"0": {"name": "punctuation.definition.group.ruby"}},
					"patterns": [{"include": "#regex_sub"}]
				},
				{
					"name": "comment.line.number-sign.ruby",
					"comment": "We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.",
					"begin": "(?<=^|\\s)(#)\\s(?=[[a-zA-Z0-9,. \\t?!-][^\\x{00}-\\x{7F}]]*$)",
					"beginCaptures": {"1": {"name": "punctuation.definition.comment.ruby"}},
					"end": "$\\n?",
				}
			]
		}
  }
}
