{
  "repository": {
    "regex_sub": {
			"patterns": [
				{
					"include": "#interpolated_ruby"
				},
				{
					"include": "#escaped_char"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.quantifier.begin.ruby"
						},
						"3": {
							"name": "punctuation.definition.quantifier.end.ruby"
						}
					},
					"match": "(\\{)\\d+(,\\d+)?(\\})",
					"name": "keyword.operator.quantifier.ruby"
				},
				{
					"begin": "\\[\\^?",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.character-class.begin.ruby"
						}
					},
					"end": "\\]",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.character-class.end.ruby"
						}
					},
					"name": "constant.other.character-class.set.ruby",
					"patterns": [
						{
							"include": "#escaped_char"
						}
					]
				},
				{
					"begin": "\\(\\?#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.begin.ruby"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.end.ruby"
						}
					},
					"name": "comment.line.number-sign.ruby",
					"patterns": [
						{
							"include": "#escaped_char"
						}
					]
				},
				{
					"begin": "\\(",
					"captures": {
						"0": {
							"name": "punctuation.definition.group.ruby"
						}
					},
					"end": "\\)",
					"name": "meta.group.regexp.ruby",
					"patterns": [
						{
							"include": "#regex_sub"
						}
					]
				},
				{
					"begin": "(?<=^|\\s)(#)\\s(?=[[a-zA-Z0-9,. \\t?!-][^\\x{00}-\\x{7F}]]*$)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.ruby"
						}
					},
					"comment": "We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.",
					"end": "$\\n?",
					"name": "comment.line.number-sign.ruby"
				}
			]
		}
  }
}
