{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ruby",
	"scopeName": "source.ruby",
	"patterns": [
    { "include": "#comment" },
    { "include": "#constant" },
    { "include": "#entity" },
    { "include": "#invalid" },
    { "include": "#keyword" },
    { "include": "#meta" },
    { "include": "#operator" },
    { "include": "#punctuation" },
    { "include": "#storage" },
    { "include": "#string" },
    { "include": "#support" },
    { "include": "#type" },
    { "include": "#variable" },
  ],
  "repository":{
    "escaped_char": {
      "patterns": [{
          "match": "\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)",
          "name": "constant.character.escape.ruby"
        }]
    },
    "interpolated_ruby": {
			"patterns": [
				{
					"begin": "#\\{",
					"beginCaptures": {"0": {"name": "punctuation.section.embedded.begin.ruby"}},
					"contentName": "source.ruby",
					"end": "(\\})",
					"endCaptures": {
						"0": {"name": "punctuation.section.embedded.end.ruby"},
            "1": {"name": "source.ruby"}
          },
					"name": "meta.embedded.line.ruby",
					"patterns": [
						{"include": "#nest_curly_and_self"},
						{"include": "$self"}
					],
					"repository": {
						"nest_curly_and_self": {
							"patterns": [
								{
									"begin": "\\{",
									"captures": {"0": {"name": "punctuation.section.scope.ruby"}},
									"end": "\\}",
									"patterns": [{"include": "#nest_curly_and_self"}]
								},
								{"include": "$self"}
							]
						}
					}
				},
				{
					"captures": {"1": {"name": "punctuation.definition.variable.ruby"}},
					"match": "(#@)[a-zA-Z_]\\w*",
					"name": "variable.other.readwrite.instance.ruby"
				},
				{
					"captures": {"1": {"name": "punctuation.definition.variable.ruby"}},
					"match": "(#@@)[a-zA-Z_]\\w*",
					"name": "variable.other.readwrite.class.ruby"
				},
				{
					"captures": {"1": {"name": "punctuation.definition.variable.ruby"}},
					"match": "(#\\$)[a-zA-Z_]\\w*",
					"name": "variable.other.readwrite.global.ruby"
				}
			]
    },
    "regex_sub": {
			"patterns": [
				{"include": "#interpolated_ruby"},
				{"include": "#escaped_char"},
				{
					"captures": {
						"1": {"name": "punctuation.definition.quantifier.begin.ruby"},
						"3": {"name": "punctuation.definition.quantifier.end.ruby"}
					},
					"match": "(\\{)\\d+(,\\d+)?(\\})",
					"name": "keyword.operator.quantifier.ruby",
				},
				{
          "name": "constant.other.character-class.set.ruby",
					"begin": "\\[\\^?",
            "end": "\\]",
            "beginCaptures": {"0": {"name": "punctuation.definition.character-class.begin.ruby"}},
					"endCaptures": {"0": {"name": "punctuation.definition.character-class.end.ruby"}},
					"patterns": [{"include": "#escaped_char"}]
				},
				{
					"name": "comment.line.number-sign.ruby",
					"begin": "\\(\\?#",
					"end": "\\)",
					"beginCaptures": {"0": {"name": "punctuation.definition.comment.begin.ruby"}},
					"endCaptures": {"0": {"name": "punctuation.definition.comment.end.ruby"}},
					"patterns": [{"include": "#escaped_char"}
					]
				},
				{
					"name": "meta.group.regexp.ruby",
					"begin": "\\(",
					"end": "\\)",
					"captures": {"0": {"name": "punctuation.definition.group.ruby"}},
					"patterns": [{"include": "#regex_sub"}]
				},
				{
					"name": "comment.line.number-sign.ruby",
					"comment": "We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.",
					"begin": "(?<=^|\\s)(#)\\s(?=[[a-zA-Z0-9,. \\t?!-][^\\x{00}-\\x{7F}]]*$)",
					"beginCaptures": {"1": {"name": "punctuation.definition.comment.ruby"}},
					"end": "$\\n?",
				}
			]
		},
  },
}
