{
  "repository": {
    "keyword": {
      "patterns": [
        {
          "match": "=>",
          "name": "punctuation.separator.key-value"
        },
        {
          "match": "->",
          "name": "support.function.kernel.lambda.ruby"
        },
        {
          "match": "<<=|%=|&{1,2}=|\\*=|\\*\\*=|\\+=|-=|\\^=|\\|{1,2}=|<<",
          "name": "keyword.operator.assignment.augmented.ruby"
        },
        {
          "match": "<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\t])\\?",
          "name": "keyword.operator.comparison.ruby"
        },
        {
          "match": "(?<!\\.)\\b(and|not|or)\\b(?![?!])",
          "name": "keyword.operator.logical.ruby"
        },
        {
          "comment": "Make sure this goes after assignment and comparison",
          "match": "(?<=^|[ \\t])!|&&|\\|\\||\\^",
          "name": "keyword.operator.logical.ruby"
        },
        {
          "match": "(%|&|\\*\\*|\\*|\\+|-|/)",
          "name": "keyword.operator.arithmetic.ruby"
        },
        {
          "match": "=",
          "name": "keyword.operator.assignment.ruby"
        },
        {
          "match": "\\||~|>>",
          "name": "keyword.operator.other.ruby"
        },
        // =====================================================================
        {
          "comment": "everything being a reserved word, not a value and needing a 'end' is a..",
          "name": "keyword.control.ruby",
          "match": "(?<!\\.)\\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\\b(?![?!])",
        },
        {
          "match": "(?<!\\.)\\b(alias|alias_method|block_given[?]|break|defined[?]|iterator[?]|next|redo|retry|return|super|undef|yield)(\\b|(?<=[?]))(?![?!])",
          "name": "keyword.control.pseudo-method.ruby",
        },
        {
          "comment": " everything being a method but having a special function is a..",
          "name": "keyword.other.special-method.ruby",
          "match": "\\b(initialize|new|loop|include|extend|prepend|fail|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|private_class_method|module_function|public|public_class_method|protected|refine|using)\\b(?![?!])",
        },
      ]
    }
  }
}
