{
  "repository": {
    "constant": {
      "patterns": [
        {
          "captures": {"1": {"name": "punctuation.definition.constant.ruby"}},
          "comment": "symbols",
          "match": "(?x)\n(?<!:)(:)\n(?>\n  [$a-zA-Z_]\\w*(?>[?!]|=(?![>=]))?\n  |\n  ===?|<=>|>[>=]?|<[<=]?|[%&`/\\|]|\\*\\*?|=?~|[-+]@?|\\[]=?\n  |\n  @@?[a-zA-Z_]\\w*\n)",
          "name": "constant.language.symbol.ruby"
        },
        {
          "name": "constant.other.symbol.hashkey.ruby",
          "comment": "symbols as hash key (1.9 syntax)",
          "match": "(?>[a-zA-Z_]\\w*(?>[?!])?)(:)(?!:)",
          "captures": {"1": {"name": "punctuation.definition.constant.ruby"}},
        },
        {
          "name": "constant.other.symbol.hashkey.ruby",
          "comment": "symbols as hash key (1.8 syntax)",
          "match": "(?<!:)(:)(?>[a-zA-Z_]\\w*(?>[?!])?)(?=\\s*=>)",
          "captures": {"1": {"name": "punctuation.definition.constant.ruby"}},
        },
        // =====================================================================
        // {
        //   "match": "\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)",
        //   "name": "constant.character.escape.ruby"
        // },
        {
          "match": "\\b(nil|true|false)\\b(?![?!])",
          "name": "constant.language.ruby",
        },
        {
          "match": "\\b(__(FILE|LINE)__)\\b(?![?!])",
          "name": "variable.language.ruby",
        },
        {
          "match": "\\b(self)\\b(?![?!])",
          "name": "variable.language.self.ruby",
        },
        // =====================================================================
        {
          "match": "\\b\\d(?>_?\\d)*(?=\\.\\d|[eE])(\\.\\d(?>_?\\d)*)?([eE][-+]?\\d(?>_?\\d)*)?r?i?\\b",
          "name": "constant.numeric.float.ruby"
        },
        {
          "match": "\\b(0|(0[dD]\\d|[1-9])(?>_?\\d)*)r?i?\\b",
          "name": "constant.numeric.integer.ruby"
        },
        {
          "match": "\\b0[xX]\\h(?>_?\\h)*r?i?\\b",
          "name": "constant.numeric.hex.ruby"
        },
        {
          "match": "\\b0[bB][01](?>_?[01])*r?i?\\b",
          "name": "constant.numeric.binary.ruby"
        },
        {
          "match": "\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\b",
          "name": "constant.numeric.octal.ruby"
        },
        {
          "comment": "\n\t\t\tmatches questionmark-letters. texamples (1st alternation = hex): ?\\x1     ?\\x61n examples (2nd alternation = octal):\\0      ?\\07     ?\\017          examples (3rd alternation = escaped):        ?\\n      ?\\b          examples (4th alternation = meta-ctrl):        ?\\C-a    ?\\M-a    ?\\C-\\M-\\C-\\M-a          examples (4th alternation = normal):        ?a       ?A       ?0         ?*       ?\"       ?(         ?.       ?#                       the negative lookbehind prevents against matching       tp(42.tainted?)",
          "match": "(?<!\\w)\\?(\\\\(x\\h{1,2}(?!\\h)\\b|0[0-7]{0,2}(?![0-7])\\b|[^x0MC])|(\\\\[MC]-)+\\w|[^\\s\\\\])",
          "name": "constant.numeric.ruby"
        },
      ]
    }
  }
}
