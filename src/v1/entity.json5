{
  "repository": {
    "entity": {
      "patterns": [
        {
          "name": "meta.function.method.with-arguments.ruby",
          "comment": "the method pattern comes from the symbol pattern, see there for a explaination",
          "begin": "(?x)\n\t\t\t         (?=def\\b)                                                      # an optimization to help Oniguruma fail fast\n\t\t\t         (?<=^|\\s)(def)\\s+                                              # the def keyword\n\t\t\t         ( (?>[a-zA-Z_]\\w*(?>\\.|::))?                                   # a method name prefix\n\t\t\t           (?>[a-zA-Z_]\\w*(?>[?!]|=(?!>))?                              # the method name\n\t\t\t           |===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\|^]|\\*\\*?|=?~|[-+]@?|\\[\\]=?) )  # …or an operator method\n\t\t\t         \\s*(\\()                                                        # the openning parenthesis for arguments\n\t\t\t        ",
          "beginCaptures": {
            "1": {"name": "keyword.control.def.ruby"},
            "2": {"name": "entity.name.function.ruby"},
            "3": {"name": "punctuation.definition.parameters.ruby"},
          },
          "end": "\\)",
          "endCaptures": {"0": {"name": "punctuation.definition.parameters.ruby"}},
          "patterns": [
            {
              "begin": "(?=[&*_a-zA-Z])",
              "end": "(?=[,)])",
              "patterns": [
                {
                  "captures": {
                    "1": {"name": "storage.type.variable.ruby"},
                    "2": {"name": "constant.other.symbol.hashkey.parameter.function.ruby"},
                    "3": {"name": "punctuation.definition.constant.ruby"},
                    "4": {"name": "variable.parameter.function.ruby"}
                  },
                  "match": "\\G([&*]?)(?:([_a-zA-Z]\\w*(:))|([_a-zA-Z]\\w*))"
                },
                {"include": "#parens"},
                {"include": "#braces"},
                {"include": "$self"}
              ]
            }
          ],
          "repository": {
            "braces": {
              "begin": "\\{",
                "end": "\\}",
              "beginCaptures": {"0": {"name": "punctuation.section.function.begin.ruby"}},
              "endCaptures": {"0": {"name": "punctuation.section.function.end.ruby"}},
              "patterns": [
                {"include": "#parens"},
                {"include": "#braces"},
                {"include": "$self"}
              ]
            },
            "parens": {
              "begin": "\\(",
              "end": "\\)",
              "beginCaptures": {"0": {"name": "punctuation.section.function.begin.ruby"}},
              "endCaptures": {"0": {"name": "punctuation.section.function.end.ruby"}},
              "patterns": [
                {"include": "#parens"},
                {"include": "#braces"},
                {"include": "$self"}
              ]
            }
          }
        },
        // =====================================================================
        {
          "comment": "same as the previous rule, but without parentheses around the arguments",
          "name": "meta.function.method.with-arguments.ruby",
          "begin": "(?x)\n\t\t\t         (?=def\\b)                                                      # an optimization to help Oniguruma fail fast\n\t\t\t         (?<=^|\\s)(def)\\s+                                              # the def keyword\n\t\t\t         ( (?>[a-zA-Z_]\\w*(?>\\.|::))?                                   # a method name prefix\n\t\t\t           (?>[a-zA-Z_]\\w*(?>[?!]|=(?!>))?                              # the method name\n\t\t\t           |===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\|^]|\\*\\*?|=?~|[-+]@?|\\[\\]=?) )  # …or an operator method\n\t\t\t         [ \\t]                                                          # the space separating the arguments\n\t\t\t         (?=[ \\t]*[^\\s#;])                                              # make sure arguments and not a comment follow\n\t\t\t        ",
          "end": "$",
          "beginCaptures": {
            "1": {"name": "keyword.control.def.ruby"},
            "2": {"name": "entity.name.function.ruby"}
          },
          "patterns": [
            {
              "begin": "(?![\\s,])",
              "end": "(?=,|$)",
              "patterns": [
                {
                  "name": "variable.parameter.function.ruby",
                  "match": "\\G([&*]?)(?:([_a-zA-Z]\\w*(:))|([_a-zA-Z]\\w*))",
                  "captures": {
                    "1": {"name": "storage.type.variable.ruby"},
                    "2": {"name": "constant.other.symbol.hashkey.parameter.function.ruby"},
                    "3": {"name": "punctuation.definition.constant.ruby"},
                    "4": {"name": "variable.parameter.function.ruby"}
                  },
                },
                {"include": "$self"}
              ]
            }
          ]
        },
      ]
    }
  }
}
